#!/bin/bash

# InfluxDB backup script
set -e

TIMESTAMP=$(date +%Y%m%d_%H%M%S)
BACKUP_DIR="{{ influxdb_backup_dir }}/${TIMESTAMP}"
LOG_FILE="/var/log/influxdb/backup-${TIMESTAMP}.log"

# Function for logging
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" | tee -a "${LOG_FILE}"
}

# Function to handle errors
handle_error() {
    log "ERROR: Backup failed - $1"
    exit 1
}

# Create backup directory
mkdir -p "${BACKUP_DIR}"

# Set InfluxDB authentication
export INFLUX_TOKEN=$(influx auth list --user {{ influxdb_admin_user }} --hide-headers | awk '{print $3}')

log "Starting InfluxDB backup"

# Perform backup
influx backup "${BACKUP_DIR}" \
    --org {{ influxdb_org }} \
    {% if influxdb_ssl_enabled %}--tls \
    --tls-cert {{ influxdb_ssl_cert }} \
    --tls-key {{ influxdb_ssl_key }} \{% endif %}
    --host http{% if influxdb_ssl_enabled %}s{% endif %}://localhost:{{ influxdb_http_port }} || handle_error "influx backup failed"

# Compress backup
log "Compressing backup"
tar czf "${BACKUP_DIR}.tar.gz" -C "${BACKUP_DIR}/.." "${TIMESTAMP}" || handle_error "Compression failed"
rm -rf "${BACKUP_DIR}"

# Cleanup old backups
find "{{ influxdb_backup_dir }}" -type f -name "*.tar.gz" -mtime +{{ influxdb_backup_retention }} -delete

log "InfluxDB backup completed successfully"
exit 0
